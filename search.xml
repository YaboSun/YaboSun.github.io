<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[GithubPages+Hexo搭建个人博客]]></title>
    <url>%2F2018%2F01%2F28%2FGithubPages%2BHexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[如果是有个人服务器的话，建议选择WP（wordpress）搭建个人博客，可以参考这篇文章VPS+LNMP+WordPress搭建个人网站。没有的话，Hexo确实是一个很好的选择，一来简洁大方，十分优雅，二来能够自己折腾，可以设计的地方很多。好，话不多说，接下来详细介绍我搭建个人博客的过程。我的GithubPages+Hexo博客欢迎访问我的Hexo博客 安装环境win10企业版 64位Node.js v8.9.3Git version2.15.0 相关步骤 安装Node.js 步骤1、到Node.js官方网址下载对应版本一般我们下载最新的LTS（长期支持）版本即可，本教程以Version8.9.3对应的msi64bit安装为例，其他版本类似步骤2、双击下载的安装包将出现如下界面：步骤3、一路点击next即可，注意选择安装路径，这个看个人喜好，我一般软件安装在D盘，我这里选择的安装路径是D:\nodejs步骤4、检查是否安装成功win+R快捷键输入cmd1输入 node -v 输入时注意中间的空格即可显示安装的Node.js版本 安装Git 步骤1、到官方网址下载对应的版本Git各平台下载地址：https://git-scm.com/downloadWindows平台Git下载地址：https://git-scm.com/download/win安装过程不需要多说什么，一路下一步即可。安装成功后在桌面或文件夹中点击鼠标右键可以看到Git Bash Here选项。步骤2、检查Git版本 1输入 git --version 输入注意是双- GitHubPages配置 步骤1、进入GitHub官网https://github.com/注册账号，具体注册这里不再赘述。步骤2、新建项目注意这里的Repository名字格式一定是账户名.github,io比如我的就是：yabosun.github.io在建好的项目右侧有Settings向下拉可看到GitHub Pages点击对应的网址你会发现该项目已经被部署到网络上，你可以通过外网来访问它。 安装Hexo 在自己认为合适的地方创建一个文件夹，用来存放之后博客的文档以及配置文件，我是在F盘新建了文件夹，并命名为BlogWorkspace。然后点击进入创建的文件夹，点击鼠标右键选择Git Bash Here 1输入 npm install hexo -g 开始安装Hexo 这个过程需要几分钟时间不等，看个人网络状况。安装完成后，检查是否安装成功 1输入 hexo -v 1输入 hexo init 初始化该文件夹，这个过程也有点漫长需要等待几分钟，最后出现Start blogging with Hexo！是不是很激动！！！ 1输入 npm install 开始安装所需要的组件 1输入 hexo g 首次体验Hexo 1输入 hexo s 可以开启本地服务器 点击http://localhost:4000/ 可以正式体验hexo，出现Hexo的界面就表示安装成功了 Hexo连接GithubPages 将Hexo与GithubPages联系起来，首次运行的话这里需要设置Git的user name和emailctrl+C结束之前的sever 1输入 git config --global user.name &quot;yabosun&quot; 这里的username为你自己的GitHub用户名 1输入 git config --g global user.email &quot;yabosun@163.com&quot; 这里user.email为你GitHub账户绑定的邮箱 1输入 cd ~/.ssh 检查是否有.ssh文件 1输入 ssh-keygen -t rsa -C &quot;yabosun@163.com&quot; 连续回车生成密钥 1输入 eval &quot;$(ssh-agent -s)&quot; 添加密钥到ssh-agent 1输入 ssh-add ~/.ssh/id_rsa 添加生成的SSH key到ssh-agent 登陆Github，点击头像下的settings，添加ssh新建一个ssh将C:\Users\yabosun\ssh路径下（这里要对应自己电脑的路径）的 id_rsa.pub文件中的内容复制到key 1输入ssh -T git@github.com 注意这里的不用改名称。 配置Deploy 在你的博客所在文件夹根目录，例如我的是在F:\BlogWorkspace找到_config.yml文件，点击编辑，我是用的SublimeText3打开的，在文件末尾输入： 这里需要注意的是格式一定是：后跟一个空格，是它固定的格式，我一开始就在这里掉了坑，名称对应自己的GitHub项目名称，登陆你的GitHub账户，进入之前创建的Repository，点击Clone or download，选择Clone with SSH并复制就是你的repository 到这里基本上博客已经搭建成功，接下来安装扩展 1输入 npm install hexo-deployer-git --save 使用MarkDown编辑器编写好文章，编辑器最开始可以使用CSDN或者简书等博客内置的编辑器，Windows上推荐使用MarkDownPad2编辑器，不过我用了一下，别的功能还好，如果是要插入图片或者一些高级功能需要升级（付费），所以我现在基本就是在csdn编辑，然后导出MD文件，并上传到Github。另外你也可以直接使用命令生成MD文档： 1输入 hexo n &quot;title&quot; 这里的title是你文章的标题，这个时候你可以看到在F:\BlogWorkspace\source\_posts这个文件夹下会生成你命名的MD文章，打开可以直接编辑，具体的MarkDown语法可以参考这篇文章http://franky47.cn/2018/01/20/How%20to%20use%20MarkdownEditer/#more 1输入 hexo g -d 即可生成并部署到GitHub服务器上，部署成功后访问你的地址：http://用户名.github.io，即可看到你文章的界面。到这里，基本的Hexo网站已经搭建完成。 参考使用Hexo+Github一步步搭建自己的博客Node.js安装配置]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>GithubPages</tag>
        <tag>Hexo</tag>
        <tag>个人博客</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[前言]]></title>
    <url>%2F2018%2F01%2F27%2F%E5%89%8D%E8%A8%80%2F</url>
    <content type="text"><![CDATA[今天是2018年1月27日，武汉迎来了一场久违的大雪，好久之前就想着搭建博客，写写自己平时的一些心得体会。但是奈何一直沉（mang）迷（yu）学（suo）习（shi），直到上周才断断续续的搭建起最初的版本欢迎访问，后续再慢慢的更新优化。今天也算是博客网站初次搭建好第一次开始写自己的博客，所以还是蛮有纪念意义的。趁着今天这个日子，写一下自己的一些感想，包括对过去半年的总结，以及对2018年的憧憬。 总结过去 认知 日子真的是过的蛮快，经常就是一看日期，卧槽，又周日了？！细细回想，这半年来还是经历了很多。最初读研的想法就是觉得自己在大学阶段实在是没有学到什么，不知道自己怎么去找到一份满意的工作，所以读研的最开始还是怀着一颗努力学习的心的，看各种教学视频，看牛人的博客，制定自己的学习目标，摸索编译器的使用，看别人的学习经验，也是在这个阶段打定主意以后更多的从事跟Java有关的工作，可能也没什么原因，就是简单的觉得看着舒服。 懵逼 跟导师说明自己的想法后，很快给了我一个锻炼的机会，用Java实现一个算法，当时满怀欣喜，但是等到真正下手的时候却不知道该怎么做，所以那段时间也是一直都没啥进展，只是知道算法的流程，真的写代码时候一脸懵逼，写代码我觉得最初还是要有看的见的东西，才能提起兴趣，就这样很快半个多月就过去了，在这里要特别的感谢自己研究生的导师，并不是像别人说的研究生导师与学生是老板与员工的关系，老师真的很认真的给我讲解，甚至亲手教我一行一行的怎么实现一个简单的算法，蓝而，我最后还是没能把那个算法写出来。 迷茫 就这样到了正式开学，我还是脑子一片迷茫，进入实验室项目组，看了一段时间项目的代码，等到写月底总结的时候，突然发现，自己啥新的功能也没有实现，交代的任务也是做的一塌糊涂，真的毫无成就感，很多时候甚至怀疑自己是不是不适合敲代码，不懂该怎么下手，感觉东西学了很快就忘。还有就是本身对MFC实在提不起兴趣。 新奇 再到后来就没有做公司的项目，跑去跟导师做事情，这个过程也是收获蛮多的，学会了使用Github？SVN？好吧，你会说这些不算，老师让我去学了一下一款轻量级数据库SQlite，学了一些语法，然后就开始着手将已有的地质数据导入到这个数据库，当然这个时候实现都是用的C++，简单说，就是模仿老师写的代码，实现基本相似的功能，好，终于有了一些进展，看到自己成功把数据一行一行用代码导入数据库心里还是蛮开心的，但是，这个乱码是什么鬼！就不能给我一个完美的机会？当然在老师的帮助下修改了，后面就做了一段时间的小蜜蜂，哦不，砖瓦工更合适些。一天老师把我叫去，说这段时间你也模仿实现了一些，接下来就自己写，你实现一下这个功能，生成一个断层面，what？不懂。虽然嘴上嗯，心里还是没太搞明白。 磨练 差不多就到了快10月，后面就是自己的兼职实习阶段，感谢威总带我，走上了Android开发之路，去公司还是跟实验室不一样的，公司催的很紧，你必须得出东西，所以压力还是有点的，仗着脸皮厚，有时候没写出来还是拖了些天才提交，代码质量自然不用多说，现在回头看看之前写的，有点想打死自己，虽然被疯狂怼还是努力的做，也感觉自己收获很大，至少能看别人的代码，自己照着实现，然后能调通这个功能了，虽然经常因为命名混乱，考虑不周被怼，但是还是有些成就感，学到了很多Android基础的编程，这部分会在后面的博客中详细记录。 致谢 首先要感谢我家小七，今天也是相恋537天，感谢一路的陪伴，感谢对我的照顾。再次就是感谢遇到自己现在的导师，感谢对我的包容，对我的细心指导。最想感谢的还有就是威总，在我编程学习阶段给我很多的帮助，帮我调bug，虽然每次一脸嫌弃哈哈。还有就是感谢公司，感谢老王，让我看到自己身上最大的不足，就是学一个东西，没有认真的弄明白，只是简单的去模仿，没有真正的搞懂。也感谢遇到133的一群机电大佬（不是基佬），一起开黑，一起上分。OK，矫情的话就说到这。 展望未来2018简单计划： 旅游 争取抽时间出去旅游2次，目前考虑的城市有西安、成都、杭州、上海，具体待定，我带上钱，你带上我@王七宝 学习 深入学习Android，包括安卓的一些优化学习Java，多线程编程、网络编程学习web开发相关，包括JS、HTML等学习python，具体还没有了解，涉及到深度学习，人工智能学习在Linux系统编程开发扎实计算机基础，抽时间把计算机网络、计算机操作系统、数据结构等计算机基础课程学习一下。 当然最大需要改变的就是以后学习东西要努力去深入了解，不要还是走马观花。想法总是美好的，现实可能很残酷，希望等到2019年看这篇博客时能没那么多后悔，而更多的是收获满满。加油！]]></content>
      <categories>
        <category>Hello World</category>
      </categories>
      <tags>
        <tag>日常随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[How to use MarkDown]]></title>
    <url>%2F2018%2F01%2F20%2FHow%20to%20use%20MarkdownEditer%2F</url>
    <content type="text"><![CDATA[欢迎使用Markdown编辑器写博客本Markdown编辑器使用StackEdit修改而来，用它写博客，将会带来全新的体验哦： Markdown和扩展Markdown简洁的语法 代码块高亮 图片链接和图片上传 LaTex数学公式 UML序列图和流程图 离线写博客 导入导出Markdown文件 丰富的快捷键 快捷键 加粗 Ctrl + B 斜体 Ctrl + I 引用 Ctrl + Q 插入链接 Ctrl + L 插入代码 Ctrl + K 插入图片 Ctrl + G 提升标题 Ctrl + H 有序列表 Ctrl + O 无序列表 Ctrl + U 横线 Ctrl + R 撤销 Ctrl + Z 重做 Ctrl + Y Markdown及扩展 Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面。 —— [ 维基百科 ] 使用简单的符号标识不同的标题，将某些文字标记为粗体或者斜体，创建一个链接等，详细语法参考帮助？。 本编辑器支持 Markdown Extra , 扩展了很多好用的功能。具体请参考Github. 表格Markdown Extra 表格语法： 项目 价格 Computer $1600 Phone $12 Pipe $1 可以使用冒号来定义对齐方式： 项目 价格 数量 Computer 1600 元 5 Phone 12 元 12 Pipe 1 元 234 ###定义列表 Markdown Extra 定义列表语法：项目１项目２: 定义 A: 定义 B 项目３: 定义 C : 定义 D &gt; 定义D内容 代码块代码块语法遵循标准markdown代码，例如：12345678910@requires_authorizationdef somefunc(param1='', param2=0): '''A docstring''' if param1 &gt; param2: # interesting print 'Greater' return (param2 - param1 + 1) or Noneclass SomeClass: pass&gt;&gt;&gt; message = '''interpreter... prompt''' ###脚注生成一个脚注[^footnote]. [^footnote]: 这里是 脚注 的 内容. 目录用 [TOC]来生成目录： [TOC] 数学公式使用MathJax渲染LaTex 数学公式，详见math.stackexchange.com. 行内公式，数学公式为：$\Gamma(n) = (n-1)!\quad\forall n\in\mathbb N$。 块级公式： $$ x = \dfrac{-b \pm \sqrt{b^2 - 4ac}}{2a} $$ 更多LaTex语法请参考 这儿. UML 图:可以渲染序列图： 123张三-&gt;李四: 嘿，小四儿, 写博客了没?Note right of 李四: 李四愣了一下，说：李四--&gt;张三: 忙得吐血，哪有时间写。 或者流程图： 12345678st=&gt;start: 开始e=&gt;end: 结束op=&gt;operation: 我的操作cond=&gt;condition: 确认？st-&gt;op-&gt;condcond(yes)-&gt;econd(no)-&gt;op 关于 序列图 语法，参考 这儿, 关于 流程图 语法，参考 这儿. 离线写博客即使用户在没有网络的情况下，也可以通过本编辑器离线写博客（直接在曾经使用过的浏览器中输入write.blog.csdn.net/mdeditor即可。Markdown编辑器使用浏览器离线存储将内容保存在本地。 用户写博客的过程中，内容实时保存在浏览器缓存中，在用户关闭浏览器或者其它异常情况下，内容不会丢失。用户再次打开浏览器时，会显示上次用户正在编辑的没有发表的内容。 博客发表后，本地缓存将被删除。 用户可以选择 把正在写的博客保存到服务器草稿箱，即使换浏览器或者清除缓存，内容也不会丢失。 注意：虽然浏览器存储大部分时候都比较可靠，但为了您的数据安全，在联网后，请务必及时发表或者保存到服务器草稿箱。 ##浏览器兼容 目前，本编辑器对Chrome浏览器支持最为完整。建议大家使用较新版本的Chrome。 IE９以下不支持 IE９，１０，１１存在以下问题 不支持离线功能 IE9不支持文件导入导出 IE10不支持拖拽文件导入]]></content>
      <categories>
        <category>MarkDown</category>
      </categories>
      <tags>
        <tag>日常随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2017%2F12%2F21%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>Hello World</category>
      </categories>
      <tags>
        <tag>To Begin</tag>
      </tags>
  </entry>
</search>
